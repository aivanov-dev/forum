<?php

namespace App;

use Carbon\Carbon;
use Illuminate\Notifications\Notifiable;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Support\Facades\Cache;

class User extends Authenticatable
{

    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password',
        'remember_token',
        'email'
    ];

    public function getRouteKeyName()
    {
//        return parent::getRouteKeyName(); // TODO: Change the autogenerated stub
        return 'name';
    }

    public function threads()
    {
        return $this->hasMany(Thread::class)->latest();
    }

    public function activity()
    {
        return $this->hasMany(Activity::class);
    }

    /**
     * @param Thread $thread
     *
     * @return string
     */
    public function visitedThreadCacheKey(Thread $thread)
    {
        return sprintf('user_%s_visited_thread_%s', $this->id, $thread->id);
    }

    /**
     * @param Thread $thread
     */
    public function read(Thread $thread)
    {
        $cacheKey = auth()->user()->visitedThreadCacheKey($thread);

        Cache::rememberForever($cacheKey, function () {
            return Carbon::now();
        });
    }
}
